import sys
# sys 모듈을 임포트하여 표준 입력을 사용할 수 있도록 합니다.

input = sys.stdin.readline
# 표준 입력에서 한 줄씩 읽어오는 함수를 input으로 재정의합니다.

N = int(input())
# 정수 N을 입력받습니다. 이는 리스트 A의 크기를 나타냅니다.

Result = 0
# 결과값을 저장할 변수를 초기화합니다.

A = list(map(int, input().split()))
# 리스트 A를 입력받습니다. 각 원소는 공백을 기준으로 분리되어 있습니다.
# map 함수를 사용하여 문자열을 정수로 변환하고, split 함수를 사용하여 공백을 기준으로 리스트를 만듭니다.

A.sort()
# 리스트 A를 정렬합니다.

for k in range(N):
    find = A[k]
    # 현재 검색할 값인 A[k]를 변수 find에 저장합니다.
    
    i = 0
    j = N - 1
    # 투 포인터 방식으로 리스트 A를 탐색하기 위해 변수 i와 j를 초기화합니다.
    # i는 리스트의 가장 작은 값부터 시작하고, j는 리스트의 가장 큰 값부터 시작합니다.

    while i < j:
        # i가 j보다 작을 때까지 반복합니다.
        
        if A[i] + A[j] == find:
            # 만약 A[i]와 A[j]의 합이 find와 같다면,
            
            if i != k and j != k:
                # 그리고 i와 j가 k와 같지 않다면(같은 수를 중복하여 사용하지 않음),
                
                Result += 1
                # 결과값을 1 증가시킵니다.
                
                break
                # 현재 반복문을 종료합니다.
                
            elif i == k:
                # i가 k와 같다면, 즉 k가 사용된 경우라면,
                
                i += 1
                # i를 1 증가시켜서 중복을 피합니다.
                
            elif j == k:
                # j가 k와 같다면, 즉 k가 사용된 경우라면,
                
                j -= 1
                # j를 1 감소시켜서 중복을 피합니다.
                
        elif A[i] + A[j] < find:
            # A[i]와 A[j]의 합이 find보다 작다면,
            
            i += 1
            # i를 증가시켜서 더 큰 값을 만듭니다.
            
        else:
            # A[i]와 A[j]의 합이 find보다 크다면,
            
            j -= 1
            # j를 감소시켜서 더 작은 값을 만듭니다.
            
print(Result)
# 결과값을 출력합니다.
